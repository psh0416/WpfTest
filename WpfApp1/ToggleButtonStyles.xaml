<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApp1">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="CheckBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Width="20" Height="13" x:Name="border" CornerRadius="5" Background="{StaticResource ButtonBackground}" >
                            <Rectangle Height="3" Fill="Black" x:Name="rect"/>
                        </Border>
                        <Border Width="20" Height="13" x:Name="border1" BorderThickness="1" CornerRadius="5" BorderBrush="{StaticResource ButtonBorderBrush}"/>
                        <!--<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid >
                                <Ellipse x:Name="optionMark" Fill="{StaticResource Foreground}" MinWidth="10" MinHeight="10" Opacity="1"/>
                            </Grid>
                        </Border>-->
                        
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>-->
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>-->
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundHightlight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="rect" Value="Hidden"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDisabled}"/>
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>-->
                            <!--<Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>-->
                            <!--<Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource BackgroundSelected}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource BackgroundSelected}"/>-->
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundSelected}"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FF63BFF5"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="2"/>
                            <Setter Property="Effect" TargetName="border1" Value="{StaticResource ButtonEffectSelected}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundSelected}"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FF63BFF5"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="2"/>
                            <Setter Property="Effect" TargetName="border1" Value="{StaticResource ButtonEffectSelected}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="{StaticResource ButtonBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="1"/>
                            <Setter Property="Effect" TargetName="border1" Value="{x:Null}"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="StandardToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="8" Background="{StaticResource ButtonBackground}" />
                        <Border x:Name="border1" BorderThickness="1" CornerRadius="8" BorderBrush="{StaticResource ButtonBorderBrush}"/>
                        <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundHightlight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundSelected}"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FF63BFF5"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="2"/>
                            <Setter Property="Effect" TargetName="border1" Value="{StaticResource ButtonEffectSelected}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundSelected}"/>
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FF63BFF5"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="2"/>
                            <Setter Property="Effect" TargetName="border1" Value="{StaticResource ButtonEffectSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDisabled}"/>
                            <Setter Property="Effect" TargetName="content" Value="{StaticResource ButtonEffectDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>